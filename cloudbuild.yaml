steps:
  # Build the container image with API key
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîç Verifying secret before Docker build..."
        echo "Secret length: $${#GEMINI_API_KEY}"
        echo "First 10 chars: $${GEMINI_API_KEY:0:10}..."
        
        # Build with the secret properly passed
        docker build \
          --no-cache \
          --build-arg "VITE_GEMINI_API_KEY=$${GEMINI_API_KEY}" \
          -t gcr.io/$PROJECT_ID/gemini-tedai:$BUILD_ID \
          -t gcr.io/$PROJECT_ID/gemini-tedai:latest \
          .
    secretEnv: ['GEMINI_API_KEY']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/gemini-tedai:$BUILD_ID']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/gemini-tedai:latest']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'gemini-tedai'
      - '--image'
      - 'gcr.io/$PROJECT_ID/gemini-tedai:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'NODE_ENV=production'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--max-instances'
      - '10'
      - '--timeout'
      - '300'

images:
  - 'gcr.io/$PROJECT_ID/gemini-tedai:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/gemini-tedai:latest'

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/GEMINI_API_KEY/versions/latest
      env: 'GEMINI_API_KEY'

options:
  machineType: 'N1_HIGHCPU_8'

